{"version":3,"sources":["../../../projects/ng-search-filter/src/lib/ng-search-filter.service.ts","../../../projects/ng-search-filter/src/lib/ng-search-filter.pipe.ts","../../../projects/ng-search-filter/src/lib/ng-search-filter.module.ts"],"names":["NgSearchFilterService","Object","defineProperty","prototype","this","_defaultLang","defaultLang","getDefaultLang","setDefaultLang","factory","ɵfac","providedIn","NgSearchFilterPipe","_ngSearchFilterService","_lang","transform","items","term","excludes","filter","lang","toCompare","toLocaleLowerCase","checkInside","item","toString","includes","property","undefined","i0","ɵɵdirectiveInject","pure","NgSearchFilterModule","declarations","exports"],"mappings":"0SAQE,SAAAA,YAEAC,OAAAC,eAAYF,EAAAG,UAAA,cAAW,KAAvB,WACE,OAAOC,KAAKC,cAAgB,UAG9B,SAAwBC,GACtBF,KAAKC,aAAeC,mCAGfN,EAAAG,UAAAI,eAAA,WACL,OAAOH,KAAKE,aAGPN,EAAAG,UAAAK,eAAA,SAAeF,GACpBF,KAAKE,YAAcA,yCAlBVN,wCAAAA,EAAqBS,QAArBT,EAAqBU,KAAAC,WAFpB,0BCMZ,SAAAC,EAAoBC,GAAAT,KAAAS,uBAAAA,EACZT,KAAAU,MAAQV,KAAKS,uBAAuBN,wBAM5CK,EAAAT,UAAAY,UAAA,SAAUC,EAAYC,EAAcC,GAClC,YADkC,IAAAA,IAAAA,EAAA,IAC7BD,GAASD,EAEPJ,EAAmBO,OAAOH,EAAOC,EAAMC,EAAUd,KAAKU,OAFjCE,GAYvBJ,EAAAO,OAAP,SACEH,EACAC,EACAC,EACAE,GAEA,IAAMC,EAAYJ,EAAKK,kBAAkBF,GAEzC,SAASG,EAAYC,EAAWP,GAC9B,GACkB,iBAATO,GACPA,EAAKC,WAAWH,kBAAkBF,GAAMM,SAASL,GAEjD,OAAO,EAGT,IAAK,IAAIM,KAAYH,EACnB,GACqB,OAAnBA,EAAKG,IACaC,MAAlBJ,EAAKG,KACLT,EAASQ,SAASC,GAIpB,GAA8B,iBAAnBH,EAAKG,IACd,GAAIJ,EAAYC,EAAKG,GAAWV,GAC9B,OAAO,OAEJ,GACLO,EAAKG,GAAUF,WAAWH,kBAAkBF,GAAMM,SAASL,GAE3D,OAAO,EAGX,OAAO,EAGT,OAAOL,EAAMG,QAAO,SAAUK,GAC5B,OAAOD,EAAYC,EAAMP,6CA3DlBL,GAAkBiB,EAAAC,kBAAA9B,gDAAlBY,EAAkBmB,MAAA,wCAAlBnB,EAAkBH,QAAlBG,EAAkBF,aCD/B,6CAAasB,iEAAAA,uEAAAA,EAAoB,CAAAC,aAAA,CAHhBrB,GAAkBsB,QAAA,CACvBtB","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgSearchFilterService {\n  private _defaultLang: string;\n\n  constructor() {}\n\n  private get defaultLang(): string {\n    return this._defaultLang || 'tr';\n  }\n\n  private set defaultLang(defaultLang: string) {\n    this._defaultLang = defaultLang;\n  }\n\n  public getDefaultLang(): string {\n    return this.defaultLang;\n  }\n\n  public setDefaultLang(defaultLang): void {\n    this.defaultLang = defaultLang;\n  }\n}\n","import { Pipe, PipeTransform, Injectable } from '@angular/core';\nimport { NgSearchFilterService } from './ng-search-filter.service';\n\n@Pipe({\n  name: 'filter',\n  pure: false,\n})\n@Injectable()\nexport class NgSearchFilterPipe implements PipeTransform {\n  constructor(private _ngSearchFilterService: NgSearchFilterService) {}\n  private _lang = this._ngSearchFilterService.getDefaultLang();\n  /**\n   * @param items object from array\n   * @param term term's search\n   * @param excludes array of strings which will ignored during search\n   */\n  transform(items: any, term: string, excludes: any = []): any {\n    if (!term || !items) return items;\n\n    return NgSearchFilterPipe.filter(items, term, excludes, this._lang);\n  }\n\n  /**\n   *\n   * @param items List of items to filter\n   * @param term  a string term to compare with every property of the list\n   * @param excludes List of keys which will be ignored during search\n   *\n   */\n  static filter(\n    items: Array<{ [key: string]: any }>,\n    term: string,\n    excludes: any,\n    lang: string\n  ): Array<{ [key: string]: any }> {\n    const toCompare = term.toLocaleLowerCase(lang);\n\n    function checkInside(item: any, term: string) {\n      if (\n        typeof item === 'string' &&\n        item.toString().toLocaleLowerCase(lang).includes(toCompare)\n      ) {\n        return true;\n      }\n\n      for (let property in item) {\n        if (\n          item[property] === null ||\n          item[property] == undefined ||\n          excludes.includes(property)\n        ) {\n          continue;\n        }\n        if (typeof item[property] === 'object') {\n          if (checkInside(item[property], term)) {\n            return true;\n          }\n        } else if (\n          item[property].toString().toLocaleLowerCase(lang).includes(toCompare)\n        ) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    return items.filter(function (item) {\n      return checkInside(item, term);\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgSearchFilterPipe } from './ng-search-filter.pipe';\n\n@NgModule({\n  declarations: [NgSearchFilterPipe],\n  exports: [NgSearchFilterPipe],\n})\nexport class NgSearchFilterModule {}\n"]}