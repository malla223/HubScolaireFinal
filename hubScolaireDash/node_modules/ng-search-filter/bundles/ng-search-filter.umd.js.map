{"version":3,"file":"ng-search-filter.umd.js","sources":["../../../projects/ng-search-filter/src/lib/ng-search-filter.service.ts","../../../projects/ng-search-filter/src/lib/ng-search-filter.pipe.ts","../../../projects/ng-search-filter/src/lib/ng-search-filter.module.ts","../../../projects/ng-search-filter/src/public-api.ts","../../../projects/ng-search-filter/src/ng-search-filter.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgSearchFilterService {\n  private _defaultLang: string;\n\n  constructor() {}\n\n  private get defaultLang(): string {\n    return this._defaultLang || 'tr';\n  }\n\n  private set defaultLang(defaultLang: string) {\n    this._defaultLang = defaultLang;\n  }\n\n  public getDefaultLang(): string {\n    return this.defaultLang;\n  }\n\n  public setDefaultLang(defaultLang): void {\n    this.defaultLang = defaultLang;\n  }\n}\n","import { Pipe, PipeTransform, Injectable } from '@angular/core';\nimport { NgSearchFilterService } from './ng-search-filter.service';\n\n@Pipe({\n  name: 'filter',\n  pure: false,\n})\n@Injectable()\nexport class NgSearchFilterPipe implements PipeTransform {\n  constructor(private _ngSearchFilterService: NgSearchFilterService) {}\n  private _lang = this._ngSearchFilterService.getDefaultLang();\n  /**\n   * @param items object from array\n   * @param term term's search\n   * @param excludes array of strings which will ignored during search\n   */\n  transform(items: any, term: string, excludes: any = []): any {\n    if (!term || !items) return items;\n\n    return NgSearchFilterPipe.filter(items, term, excludes, this._lang);\n  }\n\n  /**\n   *\n   * @param items List of items to filter\n   * @param term  a string term to compare with every property of the list\n   * @param excludes List of keys which will be ignored during search\n   *\n   */\n  static filter(\n    items: Array<{ [key: string]: any }>,\n    term: string,\n    excludes: any,\n    lang: string\n  ): Array<{ [key: string]: any }> {\n    const toCompare = term.toLocaleLowerCase(lang);\n\n    function checkInside(item: any, term: string) {\n      if (\n        typeof item === 'string' &&\n        item.toString().toLocaleLowerCase(lang).includes(toCompare)\n      ) {\n        return true;\n      }\n\n      for (let property in item) {\n        if (\n          item[property] === null ||\n          item[property] == undefined ||\n          excludes.includes(property)\n        ) {\n          continue;\n        }\n        if (typeof item[property] === 'object') {\n          if (checkInside(item[property], term)) {\n            return true;\n          }\n        } else if (\n          item[property].toString().toLocaleLowerCase(lang).includes(toCompare)\n        ) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    return items.filter(function (item) {\n      return checkInside(item, term);\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgSearchFilterPipe } from './ng-search-filter.pipe';\n\n@NgModule({\n  declarations: [NgSearchFilterPipe],\n  exports: [NgSearchFilterPipe],\n})\nexport class NgSearchFilterModule {}\n","/*\n * Public API Surface of ng-search-filter\n */\nexport * from './lib/ng-search-filter.pipe';\nexport * from './lib/ng-search-filter.service';\nexport * from './lib/ng-search-filter.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["Injectable","Pipe","NgModule"],"mappings":"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"}