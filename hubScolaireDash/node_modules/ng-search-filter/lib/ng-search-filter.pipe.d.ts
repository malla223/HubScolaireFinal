import { PipeTransform } from '@angular/core';
import { NgSearchFilterService } from './ng-search-filter.service';
import * as i0 from "@angular/core";
export declare class NgSearchFilterPipe implements PipeTransform {
    private _ngSearchFilterService;
    constructor(_ngSearchFilterService: NgSearchFilterService);
    private _lang;
    /**
     * @param items object from array
     * @param term term's search
     * @param excludes array of strings which will ignored during search
     */
    transform(items: any, term: string, excludes?: any): any;
    /**
     *
     * @param items List of items to filter
     * @param term  a string term to compare with every property of the list
     * @param excludes List of keys which will be ignored during search
     *
     */
    static filter(items: Array<{
        [key: string]: any;
    }>, term: string, excludes: any, lang: string): Array<{
        [key: string]: any;
    }>;
    static ɵfac: i0.ɵɵFactoryDef<NgSearchFilterPipe, never>;
    static ɵpipe: i0.ɵɵPipeDefWithMeta<NgSearchFilterPipe, "filter">;
    static ɵprov: i0.ɵɵInjectableDef<NgSearchFilterPipe>;
}
